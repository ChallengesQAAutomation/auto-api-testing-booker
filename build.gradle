defaultTasks 'clean', 'test', 'aggregate'
group 'co.qa.api.booker'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    jcenter()
}

buildscript {
    ext{
        serenityCoreVersion = "3.3.10"
    }
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$serenityCoreVersion")
        classpath "net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion"
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    serenityCoreVersion = "2.0.55"
    serenityCucumberVersion = "3.1.20"
}

dependencies {
    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-rest-assured:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"
    implementation group: 'net.serenity-bdd', name: 'serenity-ensure', version: '2.0.49'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.9.1'
    testImplementation 'org.slf4j:slf4j-simple:1.7.7'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.1'
    implementation group: 'org.json', name: 'json', version: '20220320'
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'


    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.18.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.18.0'
    implementation group: 'io.qameta.allure', name: 'allure-junit-platform', version: '2.19.0'


}

test {
    systemProperty "cucumber.filter.tags", System.getProperty('cucumber.filter.tags')
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()

}
task smoke(type: Test) {
    testLogging.showStandardStreams = true
    //maxParallelForks = 3
    systemProperty "cucumber.filter.tags", System.getProperty('cucumber.filter.tags')
    systemProperty("tags", "smoke")
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()

}

task regression(type: Test) {
    testLogging.showStandardStreams = true
    // maxParallelForks = 4
    systemProperty "cucumber.filter.tags", System.getProperty('cucumber.filter.tags')
    systemProperty("tags", "regression")
    systemProperties System.getProperties()
}

task issue(type: Test) {
    testLogging.showStandardStreams = true
    // maxParallelForks = 4
    systemProperty "cucumber.filter.tags", System.getProperty('cucumber.filter.tags')
    systemProperty("tags", "issue")
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()

}

serenity {
    reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
